### Environment Parameters
debug: false
mode: train
cuda: true
pin_memory: true
wandb: false
worker: 8
log_interval: 9999
save_interval: 1
saved_model_directory: 'model_ckpts'
train_fold: 1
project_name: 'GEM-FSG-Net-Background'
CUDA_VISIBLE_DEVICES: '0'

### Train Parameters
model_name: 'GEM_FSGNet'
n_classes: 1
in_channels: 3
base_c: 64
depths: [3, 3, 9, 3]
kernel_size: 3
dataloader: 'Image2Image_zero_pad'
criterion: 'DiceBCELoss'
task: 'segmentation'
input_space: 'RGB'
input_channel: 3

# GEM模块控制参数 - 可在配置文件中灵活调整
use_gem_encoder: [false, false, false, false]  # 编码器4层开关：[层1, 层2, 层3, 层4]
use_gem_bottleneck: true                   # 瓶颈层开关
use_gem_decoder: [false, false, false, false]  # 解码器4层开关：[层1, 层2, 层3, 层4]

# 🔥 背景学习参数 - 新增功能
use_background_learning: true              # 启用背景学习（标签反转）

# 数据集特定参数 - 根据您使用的数据集取消注释对应部分
# DRIVE数据集
input_size: [608, 608]
train_x_path: '/root/FSG-Net-pytorch/data/DRIVE/train/input'
train_y_path: '/root/FSG-Net-pytorch/data/DRIVE/train/label'
val_x_path: '/root/FSG-Net-pytorch/data/DRIVE/val/input'
val_y_path: '/root/FSG-Net-pytorch/data/DRIVE/val/label'

# STARE数据集
# input_size: [704, 704]
# train_x_path: 'E:/temp/FSG-Net-pytorch/data/STARE/train/input'
# train_y_path: 'E:/temp/FSG-Net-pytorch/data/STARE/train/label'
# val_x_path: 'E:/temp/FSG-Net-pytorch/data/STARE/val/input'
# val_y_path: 'E:/temp/FSG-Net-pytorch/data/STARE/val/label'

# CHASE_DB1数据集
# input_size: [1024, 1024]
# train_x_path: 'E:/temp/FSG-Net-pytorch/data/CHASE_DB1/train/input'
# train_y_path: 'E:/temp/FSG-Net-pytorch/data/CHASE_DB1/train/label'
# val_x_path: 'E:/temp/FSG-Net-pytorch/data/CHASE_DB1/val/input'
# val_y_path: 'E:/temp/FSG-Net-pytorch/data/CHASE_DB1/val/label'

# HRF数据集
# input_size: [1344, 1344]
# train_x_path: 'E:/temp/FSG-Net-pytorch/data/HRF/train/input'
# train_y_path: 'E:/temp/FSG-Net-pytorch/data/HRF/train/label'
# val_x_path: 'E:/temp/FSG-Net-pytorch/data/HRF/val/input'
# val_y_path: 'E:/temp/FSG-Net-pytorch/data/HRF/val/label'

optimizer: 'AdamW'
lr: 0.001
scheduler: 'WarmupCosine'
cycles: 100
warmup_epoch: 20
weight_decay: 0.05
batch_size: 4  # 根据GTX 1660 SUPER显存调整
epoch: 10000
ema_decay: 0
class_weight: [1.0, 1.0]
model_path: ''
freeze_layer: false

### Augmentation Parameters
transform_blur: true
transform_jitter: true
transform_hflip: true
transform_perspective: true
transform_cutmix: true
transform_rand_resize: true
transform_rand_crop: 288
# 🔥 困难样本挖掘参数
use_hard_mining: true                    # 启用困难样本挖掘
hard_mining_start_epoch: 20              # 从第20轮开始困难样本挖掘
confidence_threshold: 0.8                # 背景置信度阈值，超过此值认为是简单样本
sample_threshold: 0.6                    # 样本中简单像素比例阈值，超过此值的样本被处理
filter_strategy: 'weight'                # 'filter'完全过滤 或 'weight'降权
easy_sample_weight: 0.1                  # 简单样本的权重（当使用weight策略时）